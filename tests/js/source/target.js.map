{"version":3,"file":"target.js","sources":["nested_directory/module.js","nested_directory/named_default.js","nested_directory/unnamed_default.js","index.js"],"sourcesContent":["// variable;\r\nexport let months = ['Jan', 'Feb', 'Mar', 'Apr', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nexport var a = 66;\r\nexport const b = 67;\r\n// function:\r\nexport function ads(arg) { return 1 }\r\n// class:\r\nexport class Asde { constructor() { } }\r\n\r\nconsole.log('>> named exports test attached');","\r\n\r\nexport function Ads(arg) { }\r\n\r\nexport default class Cls { constructor() { } }\r\n\r\nconsole.log('>> named default export test attached');","\r\nexport var l = 11;\r\nexport default class {\r\n    constructor() { }\r\n    a = 1\r\n}\r\n\r\nconsole.log('>> unnamed default export test attached');","\r\n//@ts-check\r\n// import assert from 'assert';\r\n\r\nimport * as mod from \"./nested_directory/module\"\r\nimport { months, ads, a as flatVar } from \"./nested_directory/module\"\r\nimport Cls from \"./nested_directory/named_default\"\r\nimport Cls1 from \"./nested_directory/unnamed_default\"\r\n\r\n\r\n// TODO\r\n// import defaultExport, { export [, [â€¦]] } from \"module-name\";         // not implemented yet\r\n// import \"module-name\";                                                // implemented\r\n\r\n\r\nconsole.log('>'.repeat(25));\r\n\r\nconst tests = [\r\n    {\r\n        name: 'named import',\r\n        up: () => months.length === 9,\r\n    },\r\n    {\r\n        name: 'named import',\r\n        up: () => ads() === 1,\r\n    },\r\n    {\r\n        name: 'alias import',\r\n        up: () => flatVar === 66,\r\n    },\r\n    {\r\n        name: 'default named import',\r\n        up: () => new Cls,\r\n    },\r\n    {\r\n        name: 'default unnamed import',\r\n        up: () => new Cls1().a === 1,\r\n    },\r\n    {\r\n        name: 'module import',\r\n        up: () => mod.a === flatVar,\r\n    },\r\n]\r\n\r\ntests.forEach(test => {\r\n    if (test.up()) console.log('\\t' + test.name + ' is success');\r\n    else {\r\n        throw new Error(test.name + ' is failed')\r\n    }\r\n})\r\n\r\nvar a = months;\r\n\r\nconsole.log('<'.repeat(25));\r\n\r\n// console.log(a);\r\n"],"names":["flatVar","mod.a"],"mappings":"AAAA;AACO,IAAI,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC7E,IAAI,CAAC,GAAG,EAAE,CAAC;AAElB;AACO,SAAS,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,EAAE;AAGrC;AACA,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC;;ACL9B,MAAM,GAAG,CAAC,EAAE,WAAW,GAAG,GAAG,EAAE;AAC9C;AACA,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC;;ACJrC,UAAK,CAAC;AACrB,IAAI,WAAW,GAAG,GAAG;AACrB,IAAI,CAAC,GAAG,CAAC;AACT,CAAC;AACD;AACA,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC;;ACGtD;AACA;AACA;AACA;AACA;AACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B;AACA,MAAM,KAAK,GAAG;AACd,IAAI;AACJ,QAAQ,IAAI,EAAE,cAAc;AAC5B,QAAQ,EAAE,EAAE,MAAM,MAAM,CAAC,MAAM,KAAK,CAAC;AACrC,KAAK;AACL,IAAI;AACJ,QAAQ,IAAI,EAAE,cAAc;AAC5B,QAAQ,EAAE,EAAE,MAAM,GAAG,EAAE,KAAK,CAAC;AAC7B,KAAK;AACL,IAAI;AACJ,QAAQ,IAAI,EAAE,cAAc;AAC5B,QAAQ,EAAE,EAAE,MAAMA,CAAO,KAAK,EAAE;AAChC,KAAK;AACL,IAAI;AACJ,QAAQ,IAAI,EAAE,sBAAsB;AACpC,QAAQ,EAAE,EAAE,MAAM,IAAI,GAAG;AACzB,KAAK;AACL,IAAI;AACJ,QAAQ,IAAI,EAAE,wBAAwB;AACtC,QAAQ,EAAE,EAAE,MAAM,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC;AACpC,KAAK;AACL,IAAI;AACJ,QAAQ,IAAI,EAAE,eAAe;AAC7B,QAAQ,EAAE,EAAE,MAAMC,CAAK,KAAKD,CAAO;AACnC,KAAK;AACL,EAAC;AACD;AACA,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI;AACtB,IAAI,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC;AACjE,SAAS;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;AACjD,KAAK;AACL,CAAC,EAAC;AAGF;AACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B;AACA"}