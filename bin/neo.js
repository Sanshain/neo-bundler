#!/usr/bin/env node

"use strict";var require$$0=require("fs"),require$$1=require("path"),require$$3=require("perf_hooks"),require$$4=require("child_process");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var require$$0__default=_interopDefaultLegacy(require$$0),require$$1__default=_interopDefaultLegacy(require$$1),require$$3__default=_interopDefaultLegacy(require$$3),require$$4__default=_interopDefaultLegacy(require$$4);function commonjsRequire(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var __bin={},main={};const fs$1=require$$0__default.default,path$1=require$$1__default.default,startWrapLinesOffset=1,endWrapLinesOffset=5,extensions=[".ts",".js"];var rootOffset=0,exportedFiles=[];let logLines=!1;function combine(e,t,r){return logLines=r.logStub,exportedFiles=[],e=importInsert(e=removeLazy(e),t,r)}function integrate(e,t,r){var n,s=fs$1.readFileSync(e).toString(),e=path$1.resolve(e);let o=combine(s,path$1.dirname(e),Object.assign({entryPoint:path$1.basename(e),release:!1},r));return t=t||path$1.parse(e).dir+path$1.sep+path$1.parse(e).name+".js",(r.getSourceMap||"external"==r.sourceMaps||r.sourceMaps)&&(e=Object.values(modules),(n=sourcemaps.map(e=>e.debugInfo).reduce((e,t)=>e.concat(t))).push(null),r.getSourceMap&&r.getSourceMap({mapping:n,sourcesContent:e.map(e=>e.split("\n").slice(1,-5).join("\n")).concat([s]),files:sourcemaps.map(e=>e.name)}),r.sourceMaps)&&(n=n.map(e=>e||[]),n=r.sourceMaps.encode(n),e={version:3,file:path$1.basename(t),sources:sourcemaps.map(e=>e.name),sourcesContent:e.map(e=>e.split("\n").slice(1,-5).join("\n")).concat([s]),names:[],mappings:n},r.sourceMaps.external?(fs$1.writeFileSync(t+".map",JSON.stringify(e)),o+=`
//# sourceMappingURL=${path$1.basename(t)}.map`):o+=`
//# sourceMappingURL=data:application/json;charset=utf-8;base64,`+Buffer.from(JSON.stringify(e)).toString("base64")),fs$1.writeFileSync(t,o),o}class PathMan{constructor(e,t){this.dirPath=e,this.getContent=t||getContent}}class Importer{constructor(e){this.namedImportsApply=namedImports,this.moduleStamp=moduleSealing,this.pathMan=e}}function importInsert(e,t,r){var t=new PathMan(t,r.getContent||getContent),n=!(!r.sourceMaps&&!r.getSourceMap);logLines&&(e=e.replace(/console.log\(/g,function(){var e=arguments[2].slice(0,arguments[1]).split("\n").length.toString();return'console.log("'+r.entryPoint+":"+e+':", '})),e=new Importer(t).namedImportsApply(e,void 0,r.getSourceMap&&!r.sourceMaps?1:n),e="\n\n//@modules:\n\n\n"+Object.values(modules).join("\n\n")+`


//@${r.entryPoint}: 
`+e;const s=null;return n&&(rootOffset+=2*sourcemaps.length-2+5+3,sourcemaps[0]&&sourcemaps[0].debugInfo.unshift(s,s,s),sourcemaps.forEach(e=>{e.debugInfo.unshift(s,s)}),t=e.split("\n").slice(rootOffset).map((e,t)=>{return[0,sourcemaps.length,rootOffset+t,0]}),sourcemaps.push({name:r.entryPoint,debugInfo:[s,s,s].concat(t)})),r&&r.release&&(r.sourceMaps&&console.warn("Generate truth sourcemaps with options `release = true` is not guaranteed"),e=(e=(e=(e=(e=e.replace(/console.log\([\s\S]+?\)\n/g,r.sourceMaps?"\n":"")).replace(/\/\/[\s\S]*?\n/g,r.sourceMaps?"\n":"")).replace(/^[\s]*/gm,"")).replace(/\/\*[\s\S]*?\*\//g,"")).replace(/\n[\n]+/g,"\n")),e}const modules={},sourcemaps=[];function namedImports(e,m,f){const t=new Set;return e.replace(/^import (((\{([\w, ]+)\})|([\w, ]+)|(\* as \w+)) from )?\".\/([\w\-\/]+)\"/gm,(e,t,r,n,s,o,a,i,l,c)=>{var p=((m||"")+i).replace(/\//g,"$");if(!modules[p]){let n=this.moduleStamp(i,m||void 0,f);n&&(i=n.lines.map(([r,e],t)=>{return t>=n.lines.length-endWrapLinesOffset||t<startWrapLinesOffset?null:1===f?[0,sourcemaps.length-1+1,r,1]:[].map.call(e,(e,t)=>[t,sourcemaps.length-1+1,r-startWrapLinesOffset,t])}),sourcemaps.push({name:p.replace(/\$/g,"/")+".js",debugInfo:i}))}if(o&&d(o))return`const { default: ${o} } = $$${p}Exports;`;if(a)return`const ${a.split(" ").pop()} = $$${p}Exports;`;var u,i=s.split(",").map(e=>(~e.indexOf(" as ")?e.trim().split(" ").shift()+": "+e.trim().split(" ").pop():e).trim());for(u of i)d(u=~u.indexOf(":")?u.split(": ").pop():u);return`const { ${i.join(", ")} } = $$${p}Exports;`});function d(e){if(!t.has(e))return t.add(e),1;console.warn("Duplicating the imported name")}}function moduleSealing(t,e,r){let n=this.pathMan.getContent(t);var s=((e||"")+t).replace(/\//g,"$");if(""==n)return null;var o=path$1?path$1.dirname(t):t.split("/").slice(0,-1).join("/"),e=(o="."===o?"":o,(e?e+(o?"/":""):"")+o);n=namedImports(n=logLines?n.replace(/console.log\(/g,function(){var e=arguments[2].slice(0,arguments[1]).split("\n").length.toString();return'console.log("'+t+".js:"+e+':", '}):n,e);let a=Array.from(n.matchAll(/^export (class|function|let|const|var) ([\w_\n]+)?[\s]*=?[\s]*/gm)).map(e=>e[2]).join(", ");o=n.match(/^export default \b([\w_]+)\b( [\w_\$]+)?/m);return o&&(~["function","class"].indexOf(o[1])?(o[2]||(n=n.replace(/^export default \b([\w_]+)\b/m,"export default $1 $default")),a+=", default: "+(o[2]||"$default")):a+=", default: "+o[1]),a=`exports = { ${a} };`+"\n".repeat(startWrapLinesOffset),n=n.replace(/^export (default )?/gm,"")+"\n\n"+a+"\nreturn exports",modules[s]=`const $$${s}Exports = (function (exports) {
 ${n.split("\n").join("\n\t")} 
})({})`,r?(e=modules[s].split("\n"),rootOffset+=e.length,{fileStoreName:s,startWrapLinesOffset:startWrapLinesOffset,endWrapLinesOffset:5,updatedRootOffset:rootOffset,lines:e.map((e,t)=>[t,e])}):null}function getContent(e){e=path$1.normalize(this.dirPath+path$1.sep+e);for(var t of extensions)if(fs$1.existsSync(e+t)){e+=t;break}return exportedFiles.includes(e)?(console.warn(`attempting to re-import '${e}' into 'base.ts' has been rejected`),""):(exportedFiles.push(e),fs$1.readFileSync(e).toString())}function removeLazy(e){return e.replace(/\/\*@lazy\*\/[\s\S]*?\/\*_lazy\*\//,"")}main.default=main.build=main.combine=combine,main.integrate=main.pack=integrate;const build=main.integrate,path=require$$1__default.default,fs=require$$0__default.default,execSync=(require$$3__default.default.performance,require$$4__default.default)["execSync"];function getArgv(e){e=process.argv.indexOf(e)+1;return e?process.argv[e]:null}~process.argv.indexOf("-h")&&(console.log(`
-s 		- source file name (could be passed as first arg without the flag -s)
-t 		- target file name (required)
-m 		- generate sourcemap file 	(optional)
--time 	- verbose build time  		(optional)
    `),process.exit(0));const helpers={s:"source file",t:"target file"};let source=resolveFile("s",1),target=resolveFile("t",!1);const sourcemapInline=~process.argv.indexOf("--inline-m"),sourcemap=sourcemapInline||~process.argv.indexOf("-m"),release=~process.argv.indexOf("-r");release&&sourcemap&&console.log("[34m >> using the -k option in conjunction with - is not recommended, since these options have not been tested together.[0m"),console.time("built in");let r=build(source,target,{release:1==!!release,sourceMaps:sourcemap?(()=>{var t="sourcemap-codec";try{var r=commonjsRequire(t)["encode"]}catch(e){console.log("[33mThe package needed to generate the source map has not been found and will be installed automatically[0m"),console.log(execSync("npm i sourcemap-codec").toString());var r=commonjsRequire(t)["encode"]}return{encode:r,external:1==!!sourcemapInline}})():void 0});function resolveFile(e,t){let r=getArgv("-"+e)||(1===t?process.argv[t+1]:null);return r||(e=`the path is not specified (use the -${e} <filename> option for specify ${helpers[e]})`,console.warn("[31m"+e+"[0m"),process.exit(1)),path.isAbsolute(r)||(r=path.resolve(process.cwd(),r)),t&&void 0!==t&&!fs.existsSync(r)&&(console.log(process.cwd),console.warn("[31m"+r+" file not found[0m"),process.exit(1)),r}r&&(console.log(`[34m${source} => ${target}[0m`),sourcemap&&0==!!sourcemapInline&&console.log(`[34m${".".repeat(source.length)} => ${target}.map[0m`),~process.argv.indexOf("--time"))&&console.timeEnd("built in"),module.exports=__bin;
