#!/usr/bin/env node

var require$$0=require("path"),require$$1=require("fs"),require$$2=require("perf_hooks"),require$$3=require("child_process");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var require$$0__default=_interopDefaultLegacy(require$$0),require$$1__default=_interopDefaultLegacy(require$$1),require$$2__default=_interopDefaultLegacy(require$$2),require$$3__default=_interopDefaultLegacy(require$$3);function commonjsRequire(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var __bin={},main={},utils={};const path$2=require$$0__default.default,fs$2=require$$1__default.default;function deepMergeMap$1(e,t,n){const{outsideMapInfo:o,outsideMapping:r}=t,{sourcesContent:a,files:s}=e;t=e.mapping.map(n=>n&&n.length?(n.forEach((e,t)=>{n[t][1]<s.length-1&&(n[t][1]+=o.sources.length)}),n):[]).map((a,e)=>{return a&&a.length?(a||[]).map((e,t,n)=>{t=r[a[t][2]];return t&&t.length?t[0]:e[1]>o.sources.length-1?e:null}).filter(e=>e):[]});return o.sources=o.sources.concat(s.slice(0,-1)),o.sourcesContent=o.sourcesContent.concat((a||[]).slice(0,-1)),n&&(o.mappings=n(t)),{mergedMap:t,outsideMapInfo:o}}function mergeFlatMaps$1(e,t,n){var a,o,r,{mapStartToken:n,pluginMapping:s,decode:i}=n||{},s=(s?a=s:[a,o,r]=extractEmbedMap$1(e,{sourceMapToken:n,decode:i}),a.map(e=>e?e[0]:[]).map(e=>t[e[2]]));return[r||e,s]}function extractEmbedMap$1(e,t){var n=(t||{})["sourceMapToken"],a=e.lastIndexOf(n=n||"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"),n=e.slice(a+n.length),n=JSON.parse(globalThis.document?globalThis.atob(n):Buffer.from(n,"base64").toString());return[t.decode(n.mappings),n,e.slice(0,a)]}function findPackagePath$1(e,t,n){var a=t.split("/");let o=e,r=t;for(let e=0;e<a.length;e++)if(o+="/"+a[e],r=path$2.join(o,"package.json"),n.existsSync(r))return r;return r}function findMainfile$1(e){var e=JSON.parse(fs$2.readFileSync(e).toString()),t=e.module||e.main;return(t=!t&&e.exports?"string"==typeof e.exports?e.exports:e.exports["."].default:t)||void 0}utils.deepMergeMap=deepMergeMap$1,utils.mergeFlatMaps=mergeFlatMaps$1,utils.extractEmbedMap=extractEmbedMap$1,utils.genfileStoreName=function(e,t){var n=path$2.dirname(t),n="."!==n?path$2.join(e||"",n):e||"",e=path$2.basename(t),t=((n||"").replace("./","")+"__"+e.replace(".","")).replace("@","$$").replace(/[\/\\\-]/g,"$");return~t.indexOf(".")?t.replace(/./g,""):t},utils.findPackagePath=findPackagePath$1,utils.findMainfile=findMainfile$1;var monadutils={};function chainingCall$1(e,t,n){var a;return t?(a=e(...Array.prototype.slice.call(arguments,2)),t-1?chainingCall$1(e,t-1,a):a):n}function conditionalChain$1(e,t,n,a=5){n=e(n);return t(n)?n:a?conditionalChain$1(e,t,n,a-1):null}monadutils.chainingCall=chainingCall$1,monadutils.conditionalChain=conditionalChain$1;var release__={releaseProcess:function(e,t){return e.sourceMaps&&console.warn("Generate truth sourcemaps with options `release = true` is not guaranteed"),t=(t=t.replace(/console\.log\([^\n]+?\);/g,"")).replace(/^[\s]*\/\/[\s\S]*?\n/gm,e.sourceMaps?"\n":""),t=e.sourceMaps?t:(t=t.replace(/\/\*[\s\S]*?\*\//g,()=>"")).replace(/^[\t ]+\{[\n\r,\w\t ]+\}\r?\n/gm,"")}},_versions={};_versions.version=Date.now();const statHolder$1={imports:0,requires:0,dynamicImports:0,get importsAmount(){return this.imports+this.requires}},fs$1=(_versions.statHolder=statHolder$1,require$$1__default.default),path$1=require$$0__default.default,{deepMergeMap,genfileStoreName,findPackagePath,findMainfile}=utils,{chainingCall,conditionalChain}=monadutils,releaseProcess=release__["releaseProcess"],{version,statHolder}=_versions,requireOptions={sameAsImport:"same as imports"};let startWrapLinesOffset=1,endWrapLinesOffset=5;const extensions=[".ts",".js",""];var rootOffset=0,exportedFiles=[];let logLinesOption=!1,incrementalOption=!1;function combineContent(e,t,n,a){(globalOptions=n).target=n.targetFname;var o=e;return rootOffset=0,sourcemaps.splice(0,sourcemaps.length),Object.keys(modules).forEach(e=>delete modules[e]),logLinesOption=n.logStub,(incrementalOption=!!n.advanced&&n.advanced.incremental)&&(startWrapLinesOffset=3,endWrapLinesOffset=8),exportedFiles=[],n.purgeDebug&&((n.sourceMaps||n.getSourceMap)&&(console.warn("[33mremoveLazy option uncompatible with sourceMap generation now. Therefore it`s passed[0m"),n.sourceMaps=null,n.getSourceMap=null),e=cleaningDebugBlocks(e)),e=importInsert(e,t,n),e=mapGenerate({target:n.targetFname,options:n,originContent:o,content:e}),n.advanced&&n.advanced.ts&&(e=n.advanced.ts(e)),console.log(`In total handled ${statHolder.importsAmount} imports`),e}function buildFile(e,t,n){var a='File [32m"'+t+'"[33m built in',o=(console.time(a),fs$1.readFileSync(e).toString()),e=path$1.resolve(e);const r=t||path$1.parse(e).dir+path$1.sep+path$1.parse(e).name+".js";t=Object.assign({entryPoint:path$1.basename(e),release:!1,targetFname:r},n),n=fs$1.readdirSync?fs$1.readdirSync(path$1.dirname(t.targetFname)):null,o=combineContent(o,path$1.dirname(e),t);return n&&n.forEach(e=>".js"==path$1.extname(e)&&fs$1.rmSync(path$1.join(path$1.dirname(r),e))),fs$1.writeFileSync(r,o),console.log("[33m"),console.timeEnd(a),console.log("[0m"),o}class PathMan{basePath;importer;linkedModules=[];constructor(e,t){this.dirPath=e,this.getContent=t||getContent}}class Importer{pathMan;dynamicModulesExported=[];get currentFile(){return this.progressFilesStack.at(-1)}progressFilesStack=[];linkedModulePaths=[];constructor(e){this.namedImportsApply=applyNamedImports,this.moduleStamp=moduleSealing,(this.pathMan=e).importer=this}attachModule(e,t,{root:n,_needMap:a}){let o=this.moduleStamp(e,n||void 0,a);return!!o&&(e=o.lines.map(([n,e],t)=>{return t>=o.lines.length-endWrapLinesOffset||t<startWrapLinesOffset?null:1===a?[].map.call(e,(e,t)=>[t,sourcemaps.length-1+1,n-startWrapLinesOffset,t]):[[0,sourcemaps.length-1+1,n-startWrapLinesOffset,1]]}),sourcemaps.push({name:t.replace("$$","@").replace(/(\$|__)/g,"/")+".js",debugInfo:e}),!0)}generateConverter(m,f,g){return(e,t,n,a,o,r,s,i,l,p,c)=>{statHolder.imports+=1;var u=genfileStoreName(!i||nodeModules[l]?void 0:m&&chainingCall(path$1.dirname,l.match(/\.\.\//g)?.length||0,m.replace(/\/\.\//g,"/")),path$1.extname(l)?l.slice(0,-path$1.extname(l).length):l.replace(/\.\.\//g,""));if(!modules[u])if(i)this.attachModule((i||"")+l,u,{root:m,_needMap:f});else if(this.pathMan.getContent==getContent)if(nodeModulesPath=nodeModulesPath||findProjectRoot(this.pathMan.dirPath),fs$1.existsSync(nodeModulesPath)){i=path$1.normalize(l),i=path$1.join(nodeModulesPath,i),i=path$1.join(i,"package.json");let e="";fs$1.existsSync(i)&&(e=findMainfile(i)),nodeModules[l]=e,this.progressFilesStack.push(l),e,this.attachModule(l,u,{root:l+"/"+path$1.dirname(e),_needMap:f}),this.progressFilesStack.pop()}else console.warn("node_modules doesn`t exists. Use $onModuleNotFound method to autoinstall");if(r&&g(r))return`const { default: ${r} } = $${u.replace("@","_")}Exports;`;if(!r){if(s)return`const ${s.split(" ").pop()} = $${u.replace("@","_")}Exports;`;var d,i=o.split(",").map(e=>(~e.indexOf(" as ")?e.trim().split(" ").shift()+": "+e.trim().split(" ").pop():e).trim());for(d of i)~d.indexOf(":")&&(d=d.split(": ").pop()),g(d);return`const { ${i.join(", ")} } = $${u.replace("@","_")}Exports`}s=new Error(`Variable '${r}' is duplicated by import './${l}.js'`);s.name="DublicateError",console.log("[31m%s[0m",`Detected ${s.name} during build process: `+s.message,"[0m"),console.log("Fix the errors and restart the build."),process.exit(1)}}extractLinkTarget(e,t){return fs$1.lstatSync(path$1.join(nodeModulesPath,e)).isSymbolicLink()&&(e=path$1.relative(nodeModulesPath,fs$1.readlinkSync(path$1.join(nodeModulesPath,e))),console.log(e),t=path$1.join(e,t)),t}}function mapGenerate({options:e,content:n,originContent:a,target:o,cachedMap:r}){let s=!1;if(e.getSourceMap||e.sourceMaps){var i=Object.values(modules).filter(Boolean),l=r||sourcemaps.map(e=>e.debugInfo).reduce((e,t)=>e.concat(t));if(r||l.push(null),e.getSourceMap&&e.getSourceMap({mapping:l,sourcesContent:i.map(e=>e.split("\n").slice(startWrapLinesOffset,-endWrapLinesOffset).join("\n")).concat([a]),files:sourcemaps.map(e=>e.name)}),e.sourceMaps){let t=l.map(e=>e||[]);e.sourceMaps.shift&&(t=Array(e.sourceMaps.shift).fill([]).concat(t));var r=e.sourceMaps.encode(t),l=path$1&&o?path$1.basename(o):"";const p={version:3,file:l,sources:sourcemaps.map(e=>e.name),sourcesContent:i.map(e=>e.split("\n").slice(startWrapLinesOffset,-endWrapLinesOffset).join("\n")).concat([a]),names:[],mappings:r};e.sourceMaps.injectTo&&(i=e.sourceMaps.injectTo,{mergedMap:a,outsideMapInfo:r}=deepMergeMap({...p,files:p.sources,mapping:t},{outsideMapInfo:i,outsideMapping:i.maps||globalOptions.sourceMaps.decode(i.mappings)}),r.mappings=e.sourceMaps.encode(t=a),p.sources=r.sources,p.sourcesContent=r.sourcesContent),e.plugins&&(s=!0,e.plugins.forEach(e=>{e.bundle&&(n=e.bundle(n,{target:o,maps:p,rawMap:t}))})),e.sourceMaps.verbose&&console.log(p.sources,p.sourcesContent,t),fs$1&&!0===e.sourceMaps.external?(fs$1.writeFileSync(o+".map",JSON.stringify(p)),n+=`
//# sourceMappingURL=${l}.map`):(i=globalThis.document?btoa(JSON.stringify(p)):Buffer.from(JSON.stringify(p)).toString("base64"),n+=`
//# sourceMappingURL=data:application/json;charset=utf-8;base64,`+i)}}return e.plugins&&!s&&e.plugins.forEach(e=>{e.bundle&&(n=e.bundle(n,{target:o}))}),n}let globalOptions=null,nodeModulesPath=null;const nodeModules={};function importInsert(e,t,n){var t=new PathMan(t,n.getContent||getContent),a=!(!n.sourceMaps&&!n.getSourceMap);logLinesOption&&(e=e.replace(/console.log\(/g,function(){var e=arguments[2].slice(0,arguments[1]).split("\n").length.toString();return'console.log("'+n.entryPoint+":"+e+':", '}));const o=n.sourceMaps&&n.sourceMaps.charByChar,r=(e=new Importer(t).namedImportsApply(e,void 0,n.sourceMaps&&n.sourceMaps.charByChar?1:a),e="\n\n//@modules:\n\n\n"+Object.values(modules).filter(Boolean).join("\n\n")+`


//@${n.entryPoint}: 
`+e,null);return a&&(rootOffset+=5+2*sourcemaps.length+1,sourcemaps[0]&&sourcemaps[0].debugInfo.unshift(r,r,r,r),sourcemaps.forEach(e=>{e.debugInfo.unshift(r)}),t=e.split("\n").slice(rootOffset).map((e,n)=>{return o?[[0,sourcemaps.length,n,0]]:[].map.call(e,(e,t)=>[t,sourcemaps.length,n,t])}),sourcemaps.push({name:n.entryPoint,debugInfo:[r,r,r].concat(t)})),e=n&&n.release?releaseProcess(n,e):e}const modules={},sourcemaps=[];function applyNamedImports(e,p,c){const t=new Set;var n=this.generateConverter(p,c,function(e){return t.has(e)?(console.warn("Duplicating the imported name"),!1):(t.add(e),!0)}),e=e.replace(/^import (((\{([\w, \$]+)\})|([\w, ]+)|(\* as [\w\$]+)) from )?["'](.?.\/)?([@\w\-\/\.]+)["']/gm,n),n=e.replace(/(?<!\/\/[^\n]*)import\(['"'](\.?\.\/)?([\-\w\d\.\$\/@]+)['"]\)/g,function(e,n,a,t){n=""+(n||"")+a;if(statHolder.dynamicImports+=1,fs$1.writeFileSync){var o=n+(path$1.extname(n)?"":globalOptions.advanced.ts?".ts":".js"),r="$_"+path$1.basename(a)+"_"+version+".js",a=path$1.dirname(globalOptions.target);const i=new Set(Object.keys(modules));this.pathMan.basePath=".";var o=this.moduleStamp(o,p,c),s=(this.pathMan.basePath=void 0,o?.fileStoreName||genfileStoreName(p,n.replace(/^\.\//m,""))),o=modules[s];let e="";for(const l of Object.keys(modules).filter(e=>!i.has(e)))l!=s&&(e+=modules[l]+"\n",modules[l]=void 0);i.has(s)?console.warn(`It seems you try to import dynamiccally of package "${n}" imported statically yet`):modules[s]=void 0,this.dynamicModulesExported=[];let t=e+"\n{\n"+o.split("\n").slice(1,-1).join("\n")+"\n}";globalOptions.release&&(t=releaseProcess(globalOptions,t)),fs$1.writeFileSync(path$1.join(a,r),t),r="./"+(globalOptions.advanced?.dynamicImportsRoot||"")+r}return`fetch("${r||n}")`+".then(r => r.text()).then(content => new Function(content)())"}.bind(this));return globalOptions?.advanced?.require===requireOptions.sameAsImport?(n||e).replace(/(const|var|let) ((?<varnames>\{?[\w, ]+\}?) = require\(['"](?<filename>[\w\.\/]+)['"]\)[,\n\s]*)+(?=;|\n)/g,(e,t,n,a,o,r,s)=>(statHolder.requires+=1,e=e.replace(/(?:(const|var|let) )?(?<varnames>\{?[\w, ]+\}?) = require\(['"](?<filename>[\w\.-\/]+)['"]\)/g,(e,t,n,a)=>{var o=genfileStoreName(p,a.replace(/^\.\//m,""));return!modules[o]&&(this.attachModule(a,o,{root:p,_needMap:c}),modules[o])?`${t||""} ${n} = $${o}Exports`:e.split("=")[0]+`= $${o.replace("@","_")}Exports`}))):n||e}function moduleSealing(t,e,n){let a=null,o=this,r=this.pathMan.getContent(t.startsWith(".")&&e?(e.startsWith(".")?"./":"")+path$1.join(e,t):t,t.startsWith(".")&&nodeModules[e]?path$1.join(nodeModulesPath,e,path$1.dirname(nodeModules[e]),t):void 0,e=>{a=t=e},{linkPath:this.linkedModulePaths.slice(-1)[0],onSymLink(e){e=conditionalChain(path$1.dirname,e=>"node_modules"==path$1.basename(e),e);o.linkedModulePaths.push(e)}});var s=genfileStoreName(!t.startsWith(".")||nodeModules[t]?void 0:chainingCall(path$1.dirname,t.match(/\.\.\//g)?.length-1||0,e?.replace(/\/\.\//g,"/")),a?path$1.dirname(t):path$1.extname(t)?t.slice(0,-path$1.extname(t).length):t.replace(/\.\.\//g,""));if(void 0===r){var i=new Error(`File "${(e?e+"/":"")+t}.js" doesn't found`);if(i.name="FileNotFound",!n||globalOptions.onError&&globalOptions.onError(i))return null;throw i}if(""==r)return null;try{var l=t.startsWith(".")?path$1.dirname(t):nodeModules[t]?e||t:path$1.dirname(Object.keys(nodeModules).find(e=>e.startsWith(t))||t)}catch(e){}logLinesOption&&(r=r.replace(/console.log\(/g,function(){var e=arguments[2].slice(0,arguments[1]).split("\n").length.toString();return'console.log("'+t+".js:"+e+':", '}));l="."===l?"":l,i=(e&&void 0===nodeModules[t]&&!a?e+(l?"/":""):"")+l;t.indexOf("ProviderView"),r=r.replace(/export {[ ]*([\w\d\.-_\$, ]+)[ ]*} from ['"]([\./\w\d@\$]+)['"]/g,function(e,t,n){return"default "==t?`import {default as __default} from "${n}";
export default __default;`:`import { ${(t=t.split(",").map(e=>e.trim()).map(e=>"default"==e?"default as _default":e)).map(e=>e.replace(/\b([\w\$\d]+)$/,"_$1"))} } from '${n}';
`+t.map((e,t)=>e.split(" as ").pop().trim()).map(e=>"_default"==e?`export default ${e};`:`export const ${e} = _`+e).join("\n")}),r=this.namedImportsApply(r,i),this.linkedModulePaths.length&&o.linkedModulePaths.pop();let p=Array.from(r.matchAll(/^export (class|function|let|const|var) ([\w_\n]+)?[\s]*=?[\s]*/gm)).map(e=>e[2]).join(", ");r=(r=r.replace(/^export default[ ]+(\{[\s\S]*?\}(?:\n|;))/m,"var _default = $1\nexport default _default;")).replace(/^export default[ ]+(\{[ \w\d,\(\):;'"\n\[\]]*?\})/m,function(e,t){return`var _default = ${t};
export default _default;`}),p||(r=r.replace(/^(?:module\.)?exports(?<export_name>\.[\w\$][\w\d\$]*)?[ ]=\s*(?<exports>[\s\S]+?(?:\n\}|;))/gm,function(e,t,n){return p+=(t||" default: $default").slice(1)+", ",`var ${(t||" $default").slice(1)} = `+n})),p+=Array.from(r.matchAll(/^export \{([\s\S]*?)\}/gm)).map(e=>~e[1].indexOf(" as ")?e[1].trim().replace(/([\w]+) as ([\w]+)/,"$2: $1"):e[1].trim()).join(", ").replace(/[\n\s]+/g," ");e=(r=r.replace(/^export \{[\s\S]*?([\w]+) as ([\w]+)[\s\S]*?\}/m,e=>e.replace(/([\w]+) as ([\w]+)/,"$1"))).match(/^export default ([\w_\$]+)\b( [\w_\$]+)?/m);return e&&(~["function","class"].indexOf(e[1])?(e[2]||(r=r.replace(/^export default \b([\w_]+)\b/m,"export default $1 $default")),p+=`${p&&", "}default: `+(e[2]||"$default")):p+=(p&&", ")+"default: "+e[1]),p=`exports = { ${p=p.startsWith(" ,")?p.slice(2):p} };`+"\n".repeat(startWrapLinesOffset),r="\t"+r.replace(/^export (default ([\w\d_\$]+(?:;|\n))?)?/gm,"").trimEnd()+"\n\n"+p+"\nreturn exports",modules[s]=`const $${s.replace("@","_")}Exports = (function (exports) {
 ${r.split("\n").join("\n\t")} 
})({})`,incrementalOption&&(modules[s]=`
/*start of ${t}*/
${modules[s]}
/*end*/

`),n?(l=modules[s].split("\n"),{fileStoreName:s,updatedRootOffset:rootOffset+=l.length,lines:l.map((e,t)=>[t,e])}):null}function getContent(e,t,n,a){let o=null;var r,s,i,l=t||(e.startsWith(".")?path$1.normalize(this.dirPath+path$1.sep+e):path$1.join(o=path$1.join(this.basePath||a?.linkPath||nodeModulesPath,e),nodeModules[e]||""));for(r of extensions)if(fs$1.existsSync(l+r)){l+=r;break}if(path$1.extname(l)||""!==r||(e.startsWith(".")||nodeModules[e]||!a?.linkPath||(s=findMainfile(path$1.join(l,"package.json")),l=path$1.join(l,s)),s)||1!==l.split(path$1.sep).pop().split(".").length||(l+=path$1.sep+"index.js",n&&n(e+"/index.js")),exportedFiles.includes(l))return console.log(`${"."==this.basePath?"dynamically ":""}reimport of '${l}'`),"";("."==this.basePath?this.importer.dynamicModulesExported:exportedFiles).push(l);try{o&&fs$1.existsSync(o)&&fs$1.lstatSync(o).isSymbolicLink()&&(i=fs$1.readlinkSync(o),a?.onSymLink?.call(null,i))}catch(e){}try{var p=fs$1.readFileSync(l).toString()}catch{return console.warn(`File "${l}" ("import ... from '${e}'") doesn't found`),'console.log("__")'}return p}function cleaningDebugBlocks(e){return e.replace(/\/\*\@debug ?\*\/[\s\S]*?\/\*\@end_debug ?\*\//,"")}function findProjectRoot(e){if(fs$1.existsSync(path$1.join(e,"package.json")))return t=globalOptions.advanced?.nodeModulesDirname||"node_modules",path$1.join(e,t);var t=path$1.dirname(e);if(4<t.length)return findProjectRoot(t);throw new Error("Project directory and according node_modules folder are not found")}main.default=main.build=main.buildContent=main.combineContent=combineContent,main.integrate=main.packFile=main.buildFile=buildFile,main.requireOptions=requireOptions;const path=require$$0__default.default,fs=require$$1__default.default,execSync=(require$$2__default.default.performance,require$$3__default.default)["execSync"],build=main.buildFile,{mergeFlatMaps,extractEmbedMap}=utils,TS_MAP_Token="//# sourceMappingURL=data:application/json;base64,",cache={};function getArgv(e){e=process.argv.indexOf(e)+1;return e?process.argv[e]:null}~process.argv.indexOf("-h")&&(console.log(`
-s 		- source file name (could be passed as first arg without the flag -s)
-t 		- target file name (required)
-m 		- generate sourcemap file 	(optional)
--time 	- verbose build time  		(optional)
    `),process.exit(0));const helpers={s:"source file",t:"target file"};let source=resolveFile("s",1),target=resolveFile("t",!1);const sourcemapInline=~process.argv.indexOf("--inline-m"),sourcemap=sourcemapInline||~process.argv.indexOf("-m"),minify=sourcemapInline||~process.argv.indexOf("--minify"),jsx__converter=sourcemapInline||~process.argv.indexOf("--jsx-converter"),release=~process.argv.indexOf("-r");release&&sourcemap&&console.log("[34m >> using the -k option in conjunction with - is not recommended, since these options have not been tested together.[0m"),console.time("built in");let result=build(source,target,{release:1==!!release,sourceMaps:sourcemap?(()=>{var t="sourcemap-codec";try{var n=commonjsRequire(t)["encode"]}catch(e){console.log("[33mThe package needed to generate the source map has not been found and will be installed automatically[0m"),console.log(execSync("npm i sourcemap-codec").toString());var n=commonjsRequire(t)["encode"]}return{encode:n,external:1==!!sourcemapInline}})():null,advanced:source.endsWith(".ts")?{ts:e=>{var t=importPackage({packageName:"typescript"}),n=importPackage({packageName:"sourcemap-codec",funcName:"decode"}),[a,o,e]=extractEmbedMap(e,{decode:n}),t=t.transpile(e,{sourceMap:!0,inlineSourceMap:!0,inlineSources:!0,jsx:!0,allowJs:!0});return o?([e,a]=mergeFlatMaps(t,a,{mapStartToken:TS_MAP_Token,decode:n}),n=importPackage({packageName:"sourcemap-codec",funcName:"encode"}),o.mappings=n(a),o.file="",e+"\n"+TS_MAP_Token+Buffer.from(JSON.stringify(o)).toString("base64")):t}}:null,plugins:[].concat(minify?[{name:"neo-minify-plugin",bundle:(e,{maps:t})=>{e=importPackage({packageName:"uglify-js"}).minify({target:e},{sourceMap:sourcemap?{content:JSON.stringify(t),url:sourcemapInline?"inline":target+".map"}:void 0});return sourcemap&&!sourcemapInline&&fs.writeFileSync(target+".map",e.map),e.code}}]:[]).concat(jsx__converter?[{name:"neo-jsx-convert-plugin",bundle:(e,{maps:t})=>{var n=importPackage({packageName:"babel-standalone"}),a=importPackage({packageName:"babel-plugin-transform-react-jsx"}),n=n.transform(e,{inputSourceMap:t,sourceMaps:!0,plugins:[a]});return e=n.code+"\n"+TS_MAP_Token+Buffer.from(JSON.stringify(n.map)).toString("base64")}}]:[])});function importPackage({packageName:t,funcName:n,destDesc:a}){var e=t+"."+(n||"default");if(cache[e])return cache[e];try{var o=n?commonjsRequire(t)[n]:commonjsRequire(t)}catch(e){console.log(`[33mThe package ${t} needed ${a} has not been found and will be tried to install automatically[0m`),console.log(execSync("npm i "+t).toString());o=n?commonjsRequire(t)[n]:commonjsRequire(t)}return cache[e]=o}function resolveFile(e,t){let n=getArgv("-"+e)||(1===t?process.argv[t+1]:null);return n||(e=`the path is not specified (use the -${e} <filename> option for specify ${helpers[e]})`,console.warn("[31m"+e+"[0m"),process.exit(1)),path.isAbsolute(n)||(n=path.resolve(process.cwd(),n)),t&&void 0!==t&&!fs.existsSync(n)&&(console.log(process.cwd),console.warn("[31m"+n+" file not found[0m"),process.exit(1)),n}result&&(console.log(`[34m${source} => ${target}[0m`),sourcemap&&0==!!sourcemapInline&&console.log(`[34m${".".repeat(source.length)} => ${target}.map[0m`),~process.argv.indexOf("--time"))&&console.timeEnd("built in"),module.exports=__bin;
